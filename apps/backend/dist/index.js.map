{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { createYoga } from \"graphql-yoga\";\nimport { createServer } from \"node:http\";\nimport { schema } from \"./schema\";\n\n// Create a Yoga instance with a GraphQL schema.\nconst yoga = createYoga({\n  schema,\n  cors: {\n    origin: [\"https://geek-nagoya-2023.pages.dev\", \"http://localhost:5173\"],\n    credentials: true,\n    methods: [\"POST\"],\n    allowedHeaders: [\"Content-Type\", \"Authorization\"],\n  },\n});\n\n// Pass it into a server to hook into request handlers.\nconst server = createServer(yoga);\n\nserver.listen(6173, () => {\n  console.log(\"🚀 Server is running\");\n});\n\n// SIGTERMを受け取ったら、プロセスを終了\nprocess.on(\"SIGTERM\", async () => {\n  console.log(\"✅ SIGTERM signal received: closing HTTP server\");\n  await server.close();\n\n  console.log(\"👋 Process terminated\");\n});\n"],"names":["createYoga","createServer","schema","yoga","cors","origin","credentials","methods","allowedHeaders","server","listen","console","log","process","on","close"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,MAAM,QAAQ,WAAW;AAElC,gDAAgD;AAChD,MAAMC,OAAOH,WAAW;IACtBE;IACAE,MAAM;QACJC,QAAQ;YAAC;YAAsC;SAAwB;QACvEC,aAAa;QACbC,SAAS;YAAC;SAAO;QACjBC,gBAAgB;YAAC;YAAgB;SAAgB;IACnD;AACF;AAEA,uDAAuD;AACvD,MAAMC,SAASR,aAAaE;AAE5BM,OAAOC,MAAM,CAAC,MAAM;IAClBC,QAAQC,GAAG,CAAC;AACd;AAEA,yBAAyB;AACzBC,QAAQC,EAAE,CAAC,WAAW;IACpBH,QAAQC,GAAG,CAAC;IACZ,MAAMH,OAAOM,KAAK;IAElBJ,QAAQC,GAAG,CAAC;AACd"}